services:
  backend: # Flask service
    build: ./backend
    container_name: flask_app
    ports:
      - "5000:5000"
    restart: always
    volumes:
      - ./backend:/app
      - .{$PWD}:/app
      # - ./backend/.venv:/app
    env_file:
    - ./backend/.env
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - SQLALCHEMY_DATABASE_URI=mysql+pymysql://root:rootpassword@mysql_db:3306/flask_db
    networks:
      - tickizer
    depends_on:
      - mysql_db
      - redis_python
      - rabbitmq_python
    # command: ["python", "app.py"]
    command: ["flask", "run", "--host=0.0.0.0", "--port=5000", "--reload"]
    # command: flask run --host=0.0.0.0 --port=5000 --reload

  rabbitmq_python:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"  # AMQP protocol
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - tickizer

  frontend: # Next.js frontend
    build: ./frontend
    container_name: next_app
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_NODE_ENV=local
      - CHOKIDAR_USEPOLLING=true
      - NEXT_WEBPACK_USEPOLLING=true
    depends_on:
      - backend
    networks:
      - tickizer
    restart: always
    command: npm run dev
 # ======================
  # Redis 
  # ======================
  redis_python:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - tickizer

 # ======================
  # MySQL Database
  # ======================
  mysql_db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: flask_db
      MYSQL_USER: flask_user
      MYSQL_PASSWORD: flask_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - tickizer

volumes:
  rabbitmq_data:
  mysql_data:

networks:
  tickizer:
  # healthcheck:
  #   test: ["CMD", "curl", "-f", "http://localhost:5000/"]
  #   interval: 30s
  #   timeout: 10s
  #   retries: 3
